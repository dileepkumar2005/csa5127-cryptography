#include <stdio.h>
#include <string.h>
#include <ctype.h>

void generateKey(char *str, char *key) {
    int strLen = strlen(str);
    int keyLen = strlen(key);
    for (int i = 0; i < strLen; i++) {
        key[i] = key[i % keyLen];
    }
    key[strLen] = '\0'; // Null-terminate the key
}

void encryptText(char *plaintext, char *key, char *ciphertext) {
    for (int i = 0; plaintext[i] != '\0'; i++) {
        if (isalpha(plaintext[i])) {
            char base = isupper(plaintext[i]) ? 'A' : 'a';
            ciphertext[i] = ((tolower(plaintext[i]) - 'a') + (tolower(key[i]) - 'a')) % 26 + base;
        } else {
            ciphertext[i] = plaintext[i]; // Keep non-alphabet characters unchanged
        }
    }
    ciphertext[strlen(plaintext)] = '\0';
}

int main() {
    char plaintext[100], keyword[100], key[100], ciphertext[100];

    printf("Enter the plaintext: ");
    fgets(plaintext, sizeof(plaintext), stdin);
    plaintext[strcspn(plaintext, "\n")] = '\0';  // Remove newline if any

    printf("Enter the keyword: ");
    scanf("%s", keyword);

    generateKey(plaintext, keyword);
    encryptText(plaintext, keyword, ciphertext);

    printf("Polyalphabetic Cipher Text: %s\n", ciphertext);

    return 0;
}
